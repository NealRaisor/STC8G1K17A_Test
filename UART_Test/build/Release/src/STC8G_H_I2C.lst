C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE STC8G_H_I2C
OBJECT MODULE PLACED IN .\build\Release\src\STC8G_H_I2C.o
COMPILER INVOKED BY: C:\Dev Tools\keil c51\C51\BIN\C51.exe .\SRC\STC8G_H_I2C.C OMF2 TABS(4) CODE NOCOND SYMBOLS PRINT(.\
                    -build\Release\src\STC8G_H_I2C.lst) INCDIR(../../../../../../../../Dev Tools/keil c51/C51/INC;src) DEFINE(__UVISION_VERSI
                    -ON=526) OPTIMIZE(8,SPEED) SMALL ROM(LARGE) OBJECT(.\build\Release\src\STC8G_H_I2C.o)

line level    source

   1          #include "STC8G_H_I2C.h"
   2          
   3          //==================== Standard i2 operation function ====================
   4          void I2C_Wait()
   5          {
   6   1          while (!(I2CMSST & 0x40))
   7   1              ;
   8   1          I2CMSST &= ~0x40;
   9   1      }
  10          
  11          void I2C_Start()
  12          {
  13   1          I2CMSCR = 0x01;
  14   1          I2C_Wait();
  15   1      }
  16          
  17          void I2C_SendByte(u8 Data)
  18          {
  19   1          I2CTXD  = Data;
  20   1          I2CMSCR = 0x02;
  21   1          I2C_Wait();
  22   1      }
  23          
  24          void I2C_RecvACK()
  25          {
  26   1          I2CMSCR = 0x03;
  27   1          I2C_Wait();
  28   1      }
  29          
  30          u8 I2C_RecvByte(void)
  31          {
  32   1          I2CMSCR = 0x04;
  33   1          I2C_Wait();
  34   1          return I2CRXD;
  35   1      }
  36          
  37          void I2C_SendACK()
  38          {
  39   1          I2CMSST = 0x00;
  40   1          I2CMSCR = 0x05;
  41   1          I2C_Wait();
  42   1      }
  43          
  44          void I2C_SendNAK()
  45          {
  46   1          I2CMSST = 0x01;
  47   1          I2CMSCR = 0x05;
  48   1          I2C_Wait();
  49   1      }
  50          
  51          void I2C_Stop()
  52          {
  53   1          I2CMSCR = 0x06;
C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 2   

  54   1          I2C_Wait();
  55   1      }
  56          //================================= end ===================================
  57          
  58          /// @brief Standard i2c write data function
  59          /// @param Dev_Addr device i2c adrr
  60          /// @param Mem_Addr target memory addr
  61          /// @param buf  Data buffer
  62          /// @param len  Length of data to be sent
  63          void I2C_WriteNBytes(u8 Dev_Addr, u8 Mem_Addr, u8 *buf, u8 len)
  64          {
  65   1          // I2C standard writing data
  66   1          I2C_Start();            // start sign
  67   1          I2C_SendByte(Dev_Addr); // send i2c write addr
  68   1          I2C_RecvACK();
  69   1          if (I2C_NO_MEM_ADDR != Mem_Addr) {
  70   2              I2C_SendByte(Mem_Addr); // send memory addr
  71   2              I2C_RecvACK();
  72   2          }
  73   1          // I2C Send data with length len.
  74   1          do {
  75   2              I2C_SendByte(*buf);
  76   2              I2C_RecvACK();
  77   2              if (1 != len) // Avoid array out of bounds
  78   2                  ++buf;
  79   2          } while (--len);
  80   1          I2C_Stop(); // stop i2c
  81   1      }
  82          
  83          /// @brief Standard i2c read data function
  84          /// @param Dev_Addr  device i2c adrr
  85          /// @param Mem_Addr target memory addr
  86          /// @param buf  data buffer
  87          /// @param len  Length of data to be sent
  88          void I2C_ReadNBytes(u8 Dev_Addr, u8 Mem_Addr, u8 *buf, u8 len)
  89          {
  90   1          if (I2C_NO_MEM_ADDR != Mem_Addr) {
  91   2              // I2C write mem_addr
  92   2              I2C_Start();
  93   2              I2C_SendByte(Dev_Addr); // write cmd
  94   2              I2C_RecvACK();
  95   2              I2C_SendByte(Mem_Addr); // target mem_addr
  96   2              I2C_RecvACK();
  97   2          }
  98   1          // I2C read start
  99   1          I2C_Start();
 100   1          I2C_SendByte(Dev_Addr | 1); // send read sign
 101   1          I2C_RecvACK();
 102   1          do {
 103   2              (*buf) = I2C_RecvByte();
 104   2              if (1 != len) {
 105   3                  ++buf;
 106   3                  I2C_SendACK(); // send ACK
 107   3              }
 108   2          } while (--len);
 109   1          I2C_SendNAK(); // last one, Send no ACK, Recv over.
 110   1          I2C_Stop();    // stop i2c
 111   1      }
 112          
 113          /*
 114          void I2C_Init(I2C_InitTypeDef *I2Cx)
 115          {
C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 3   

 116              u8 i;
 117              for (i = 0; i < I2C_BUF_LENTH; i++)
 118                  I2C_BUF[i] = 0x00;
 119          // master
 120              if (I2Cx->I2C_Mode == I2C_Mode_Master) {
 121                  I2C_Master();
 122                  I2CMSST = 0x00;
 123                  I2C_SetSpeed(I2Cx->I2C_Speed);
 124                  if (I2Cx->I2C_MS_WDTA == ENABLE)
 125                      I2C_WDTA_EN();
 126                  else
 127                      I2C_WDTA_DIS();
 128              }
 129          // slave
 130              else {
 131                  I2C_Slave();
 132                  I2CSLST = 0x00;
 133                  I2C_Address(I2Cx->I2C_SL_ADR);
 134                  if (I2Cx->I2C_SL_MA == ENABLE)
 135                      I2C_MATCH_EN();
 136                  else
 137                      I2C_MATCH_DIS();
 138              }
 139              I2C_Function(I2Cx->I2C_Enable);
 140          }
 141          */
C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION I2C_Wait (BEGIN)
                                           ; SOURCE LINE # 4
                                           ; SOURCE LINE # 5
0000         ?C0001:
                                           ; SOURCE LINE # 6
0000 90FE82            MOV     DPTR,#0FE82H
0003 E0                MOVX    A,@DPTR
0004 30E6F9            JNB     ACC.6,?C0001
                                           ; SOURCE LINE # 8
0007 E0                MOVX    A,@DPTR
0008 54BF              ANL     A,#0BFH
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 9
000B 22                RET     
             ; FUNCTION I2C_Wait (END)

             ; FUNCTION I2C_Start (BEGIN)
                                           ; SOURCE LINE # 11
                                           ; SOURCE LINE # 12
                                           ; SOURCE LINE # 13
0000 90FE81            MOV     DPTR,#0FE81H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 14
0006 020000      R     LJMP    I2C_Wait
             ; FUNCTION I2C_Start (END)

             ; FUNCTION _I2C_SendByte (BEGIN)
                                           ; SOURCE LINE # 17
;---- Variable 'Data' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
0000 90FE86            MOV     DPTR,#0FE86H
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 20
0005 90FE81            MOV     DPTR,#0FE81H
0008 7402              MOV     A,#02H
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 21
000B 020000      R     LJMP    I2C_Wait
             ; FUNCTION _I2C_SendByte (END)

             ; FUNCTION L?0023 (BEGIN)
0000 120000      R     LCALL   I2C_Start
0003 120000      R     LCALL   _I2C_SendByte
             ; FUNCTION I2C_RecvACK (BEGIN)
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
0006 90FE81            MOV     DPTR,#0FE81H
0009 7403              MOV     A,#03H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 27
000C 020000      R     LJMP    I2C_Wait
             ; FUNCTION I2C_RecvACK (END)

             ; FUNCTION I2C_RecvByte (BEGIN)
                                           ; SOURCE LINE # 30
C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 5   

                                           ; SOURCE LINE # 31
                                           ; SOURCE LINE # 32
0000 90FE81            MOV     DPTR,#0FE81H
0003 7404              MOV     A,#04H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 33
0006 120000      R     LCALL   I2C_Wait
                                           ; SOURCE LINE # 34
0009 90FE87            MOV     DPTR,#0FE87H
000C E0                MOVX    A,@DPTR
000D FF                MOV     R7,A
                                           ; SOURCE LINE # 35
000E 22                RET     
             ; FUNCTION I2C_RecvByte (END)

             ; FUNCTION I2C_SendACK (BEGIN)
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
0000 90FE82            MOV     DPTR,#0FE82H
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 40
0005 90FE81            MOV     DPTR,#0FE81H
0008 7405              MOV     A,#05H
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 41
000B 020000      R     LJMP    I2C_Wait
             ; FUNCTION I2C_SendACK (END)

             ; FUNCTION I2C_SendNAK (BEGIN)
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
0000 90FE82            MOV     DPTR,#0FE82H
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 47
0006 90FE81            MOV     DPTR,#0FE81H
0009 7405              MOV     A,#05H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 48
000C 020000      R     LJMP    I2C_Wait
             ; FUNCTION I2C_SendNAK (END)

             ; FUNCTION I2C_Stop (BEGIN)
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
0000 90FE81            MOV     DPTR,#0FE81H
0003 7406              MOV     A,#06H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 54
0006 020000      R     LJMP    I2C_Wait
             ; FUNCTION I2C_Stop (END)

             ; FUNCTION _I2C_WriteNBytes (BEGIN)
                                           ; SOURCE LINE # 63
;---- Variable 'Dev_Addr' assigned to Register 'R6' ----
0000 AE07              MOV     R6,AR7
;---- Variable 'buf' assigned to Register 'R1/R2/R3' ----
;---- Variable 'Mem_Addr' assigned to Register 'R5' ----
C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 6   

                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
0002 120000      R     LCALL   L?0023
                                           ; SOURCE LINE # 69
0005 ED                MOV     A,R5
0006 F4                CPL     A
0007 6008              JZ      ?C0014
                                           ; SOURCE LINE # 70
0009 AF05              MOV     R7,AR5
000B 120000      R     LCALL   _I2C_SendByte
                                           ; SOURCE LINE # 71
000E 120000      R     LCALL   I2C_RecvACK
                                           ; SOURCE LINE # 72
0011         ?C0014:
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
0011 120000      E     LCALL   ?C?CLDPTR
0014 FF                MOV     R7,A
0015 120000      R     LCALL   _I2C_SendByte
                                           ; SOURCE LINE # 76
0018 120000      R     LCALL   I2C_RecvACK
                                           ; SOURCE LINE # 77
001B E500        R     MOV     A,len
001D 6401              XRL     A,#01H
001F 6007              JZ      ?C0012
                                           ; SOURCE LINE # 78
0021 7401              MOV     A,#01H
0023 29                ADD     A,R1
0024 F9                MOV     R1,A
0025 E4                CLR     A
0026 3A                ADDC    A,R2
0027 FA                MOV     R2,A
                                           ; SOURCE LINE # 79
0028         ?C0012:
0028 D500E6            DJNZ    len,?C0014
                                           ; SOURCE LINE # 80
002B 020000      R     LJMP    I2C_Stop
             ; FUNCTION _I2C_WriteNBytes (END)

             ; FUNCTION _I2C_ReadNBytes (BEGIN)
                                           ; SOURCE LINE # 88
;---- Variable 'Dev_Addr' assigned to Register 'R6' ----
0000 AE07              MOV     R6,AR7
;---- Variable 'buf' assigned to Register 'R1/R2/R3' ----
;---- Variable 'Mem_Addr' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
0002 ED                MOV     A,R5
0003 F4                CPL     A
0004 600B              JZ      ?C0017
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 94
0006 120000      R     LCALL   L?0023
                                           ; SOURCE LINE # 95
0009 AF05              MOV     R7,AR5
000B 120000      R     LCALL   _I2C_SendByte
                                           ; SOURCE LINE # 96
000E 120000      R     LCALL   I2C_RecvACK
                                           ; SOURCE LINE # 97
C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 7   

0011         ?C0017:
                                           ; SOURCE LINE # 99
0011 120000      R     LCALL   I2C_Start
                                           ; SOURCE LINE # 100
0014 EE                MOV     A,R6
0015 4401              ORL     A,#01H
0017 FF                MOV     R7,A
0018 120000      R     LCALL   _I2C_SendByte
                                           ; SOURCE LINE # 101
001B 120000      R     LCALL   I2C_RecvACK
001E         ?C0020:
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
001E 120000      R     LCALL   I2C_RecvByte
0021 EF                MOV     A,R7
0022 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 104
0025 E500        R     MOV     A,len
0027 6401              XRL     A,#01H
0029 600A              JZ      ?C0018
                                           ; SOURCE LINE # 105
002B 7401              MOV     A,#01H
002D 29                ADD     A,R1
002E F9                MOV     R1,A
002F E4                CLR     A
0030 3A                ADDC    A,R2
0031 FA                MOV     R2,A
                                           ; SOURCE LINE # 106
0032 120000      R     LCALL   I2C_SendACK
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
0035         ?C0018:
0035 D500E6            DJNZ    len,?C0020
                                           ; SOURCE LINE # 109
0038 120000      R     LCALL   I2C_SendNAK
                                           ; SOURCE LINE # 110
003B 020000      R     LJMP    I2C_Stop
             ; FUNCTION _I2C_ReadNBytes (END)

C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 8   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


PLLCR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DCH  1
P0M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0093H  1
P1M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0092H  1
P2M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0096H  1
P1M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P3M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B2H  1
P2M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0095H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
I2C_RecvACK. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0006H  -----
P4M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B4H  1
P3M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B1H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P5M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
P4M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B3H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
WKTCH. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ABH  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
P6M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
P5M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C9H  1
P4 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
P7M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
P6M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
P5 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
int8 . . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
P6 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
P7M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E1H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
_I2C_WriteNBytes . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  Dev_Addr . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0006H  1
  Mem_Addr . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
  buf. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0001H  3
  len. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
I2C_SendNAK. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
P7 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
WKTCL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AAH  1
SPCTL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CEH  1
P_SW1. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A2H  1
P_SW2. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BAH  1
DPH1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E5H  1
EADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
IAP_CMD. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C5H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
DPL1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E4H  1
ADC_RES. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BDH  1
IP2H . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B6H  1
IP3H . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EEH  1
TA . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AEH  1
INTCLKO. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008FH  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
PADC . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
ADCCFG . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DEH  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 9   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


IAP_ADDRH. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C3H  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
IAP_ADDRL. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C4H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
PPCA . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BFH  1
LIRTRIM. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009EH  1
CMPCR1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E6H  1
uint32 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
CMPCR2 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E7H  1
uint16 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
ELVD . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
u8 . . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
I2C_Start. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
P00. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
ADC_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
P10. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
P01. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
P20. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
P11. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
P02. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0082H  1
int32. . . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
IAP_TPS. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F5H  1
P30. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
P21. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
P12. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
P03. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0083H  1
P40. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C0H  1
P31. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
P22. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
P13. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P04. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0084H  1
int16. . . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
P50. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
P41. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C1H  1
P32. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
P23. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
P14. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
P05. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0085H  1
I2C_Wait . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
P60. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
P51. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
P42. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C2H  1
P33. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
P24. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A4H  1
P15. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
P06. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0086H  1
P70. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F8H  1
P61. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
P52. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
P43. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C3H  1
PLVD . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BEH  1
C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 10  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P34. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
P25. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
P16. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
P07. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0087H  1
P71. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F9H  1
P62. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
P53. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
P44. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C4H  1
P35. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
P26. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A6H  1
P17. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
P72. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FAH  1
P63. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
P54. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
P45. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C5H  1
P36. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
P27. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
P73. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FBH  1
P64. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
P55. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
P46. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C6H  1
P37. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
P74. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FCH  1
P65. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
P56. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
P47. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C7H  1
P75. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FDH  1
P66. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
P57. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
P76. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FEH  1
P67. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EFH  1
P77. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FFH  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
IE2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AFH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
AUXR . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
_I2C_SendByte. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  Data . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
USBADR . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FCH  1
IAP_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C7H  1
USBDAT . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ECH  1
USBCLK . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DCH  1
I2C_Stop . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
I2C_RecvByte . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
RSTCFG . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FFH  1
IP2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B5H  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
USBCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F4H  1
IP3. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 11  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
T2H. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D6H  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
T3H. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D4H  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
T4H. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D2H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
T2L. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D7H  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
T3L. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D5H  1
T4L. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D3H  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
IAP_DATA . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C2H  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
WDT_CONTR. . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C1H  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
IRTRIM . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009FH  1
u32. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
u16. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
T4T3M. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D1H  1
ADC_RESL . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BEH  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
SPSTAT . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
IPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B7H  1
S2BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009BH  1
S3BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ADH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
S4BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0085H  1
S2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009AH  1
DPS. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E3H  1
S3CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ACH  1
S4CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0084H  1
AUXINTIF . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EFH  1
wchar_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
SADEN. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B9H  1
SADDR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A9H  1
IAP_TRIG . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C6H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
IRCBAND. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009DH  1
_I2C_ReadNBytes. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  Dev_Addr . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0006H  1
  Mem_Addr . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
  buf. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0001H  3
  len. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
F1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
C51 COMPILER V9.60.7.0   STC8G_H_I2C                                                       09/03/2023 22:38:29 PAGE 12  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
uint8. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
I2C_SendACK. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SPDAT. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CFH  1
P0M0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0094H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    211    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
